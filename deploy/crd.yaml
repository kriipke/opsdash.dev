apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: cipipelines.ci.opsdash.dev
spec:
  group: ci.opsdash.dev
  names:
    plural: cipipelines
    singular: cipipeline
    kind: CIPipeline
    shortNames:
      - cip
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: >
            CIPipeline defines the desired state for a Continuous Integration pipeline that builds and pushes container images only after all configured pre-build steps (code reviews,
            secrets scanning, static analysis, etc.) have succeeded. In addition, the resource allows specification of the CI language configuration to be generated
            (e.g. Jenkinsfile, GitHub Actions, GitLab CI, etc.).
          type: object
          properties:
            spec:
              type: object
              properties:
                ciLanguage:
                  type: string
                  description: >
                    Specifies the CI language or configuration style to be produced. For example, 'jenkins' will generate a Jenkinsfile,
                    'github-actions' will produce a GitHub Actions workflow, and 'gitlab-ci' will produce a GitLab CI configuration.
                  enum:
                    - jenkins
                    - github-actions
                    - gitlab-ci
                    - travis
                    - circleci
                    - custom
                trigger:
                  type: object
                  description: Defines what starts the pipeline.
                  properties:
                    type:
                      type: string
                      description: "Trigger type: git, manual, or schedule"
                      enum:
                        - git
                        - manual
                        - schedule
                    git:
                      type: object
                      description: "Git-based trigger configuration"
                      properties:
                        branch:
                          type: string
                          description: "Branch to watch for changes"
                        event:
                          type: string
                          description: "Event type triggering the pipeline"
                          enum:
                            - push
                            - pull_request
                  required:
                    - type
                preBuild:
                  type: array
                  description: "Optional pre-build steps (e.g. code review, secrets scan, static analysis)"
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: "Human-readable name for the step"
                      type:
                        type: string
                        description: "Step type identifier (codeReview, gitleaks, staticScan, custom)"
                        enum:
                          - codeReview
                          - gitleaks
                          - staticScan
                          - custom
                      enabled:
                        type: boolean
                        description: "Enable or disable this step"
                        default: true
                      config:
                        type: object
                        description: "Arbitrary configuration for the step"
                        additionalProperties: true
                  default: []
                build:
                  type: object
                  description: "Container image build configuration"
                  properties:
                    dockerfile:
                      type: string
                      description: "Path to the Dockerfile used in the build"
                    context:
                      type: string
                      description: "Build context directory"
                    args:
                      type: object
                      description: "Build arguments passed to Docker"
                      additionalProperties:
                        type: string
                    image:
                      type: object
                      description: "Image repository and tagging strategy"
                      properties:
                        repository:
                          type: string
                          description: "Container registry repository (e.g. registry.opsdash.dev/webservice)"
                        tagStrategy:
                          type: string
                          description: "Strategy for tagging images"
                          enum:
                            - git-commit
                            - semver
                            - custom
                        semver:
                          type: object
                          description: "Semantic versioning options (used when tagStrategy is semver)"
                          properties:
                            enforce:
                              type: boolean
                              description: "Whether to enforce semantic versioning rules"
                    registryCredentials:
                      type: object
                      description: "Configuration for retrieving container registry credentials from an external secrets manager"
                      properties:
                        secretRef:
                          type: string
                          description: "Reference to the external secret holding registry credentials"
                        provider:
                          type: string
                          description: "Name of the secrets manager provider (e.g. vault, aws, gcp)"
                  required:
                    - dockerfile
                    - context
                    - image
                    - registryCredentials
                postBuild:
                  type: array
                  description: "Optional post-build steps (e.g. custom scripts)"
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      type:
                        type: string
                        description: "Type identifier for the post-build step"
                      enabled:
                        type: boolean
                        default: true
                      config:
                        type: object
                        description: "Step-specific configuration"
                        additionalProperties: true
                  default: []
                notifications:
                  type: array
                  description: "Configuration for pipeline notifications"
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        description: "Notification type (e.g. slack, email, webhook)"
                        enum:
                          - slack
                          - email
                          - webhook
                      config:
                        type: object
                        description: "Notification configuration details"
                        additionalProperties: true
                  default: []
                podTemplate:
                  type: object
                  description: "Pod template for executing pipeline stages (integrates with Kubernetes Pods)"
                  properties:
                    metadata:
                      type: object
                      description: "Pod metadata (labels, annotations)"
                    spec:
                      type: object
                      description: "Pod spec (resources, tolerations, etc.)"
                      additionalProperties: true
              required:
                - trigger
                - build
      subresources:
        status: {}
